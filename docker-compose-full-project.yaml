version: '3.7'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: es
    environment:
      - discovery.type=single-node
    restart: always
    ports:
      - 9200:9200
    networks:
      - movie_net
    volumes:
      - es_data:/data

  redis:
    image: redis:alpine
    volumes:
      - ./state/redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    ports:
      - 6379:6379
    networks:
      - movie_net
    depends_on:
      - elasticsearch

  db:
    container_name: postgres
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    restart: always
    networks:
      - movie_net
    ports:
      - 5432:5432
    volumes:
      - db-data-4:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  admin_panel:
    image: "ghcr.io/s-klimov/admin_panel_sprint_2:main"
    env_file:
      - .env
    restart: always
    networks:
      - movie_net
    volumes:
      - ./config.json:/usr/src/app/config.json
      - django-static:/usr/src/app/static
    depends_on:
      - db

  nginx:
    container_name: nginx
    image: nginx:1.19.2
    restart: always
    networks:
      - movie_net
    depends_on:
      - db
      - admin_panel
    ports:
      - 80:80
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/configs:/etc/nginx/conf.d:ro
      - django-static/:/static

  movie_etl:
    container_name: movie_etl
    image: "ghcr.io/s-klimov/etl:main"
    env_file:
      - .env
    restart: always
    networks:
      - movie_net
    volumes:
      - ./config.json:/usr/src/postgres_to_es/config.json
    depends_on:
      - redis
      - elasticsearch
      - db

  movie_api:
    container_name: movie_api
    build:
      context: .
    restart: always
    networks:
      - movie_net
    ports:
      - 8000:8000
    depends_on:
      - redis
      - elasticsearch
      - db
    volumes:
      - .:/usr/src/app/


volumes:
  es_data:
  redis_data:
  db-data-4:
  django-static:

networks:
  movie_net:
    name: movie_net
    driver: bridge

